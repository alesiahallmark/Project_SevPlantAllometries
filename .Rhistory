raw.data.file <- read.xls(raw.data.sheets[i])
# extract file name info
field.file.name <- strsplit(list.files(location_raw.data.sheets, pattern = "npp")[i], split = "[.]")[[1]]
raw.data.file$collection.date <- as.Date(paste(field.file.name[2], field.file.name[3], field.file.name[4]), format = "%m %d %y")
raw.data.file$collector <- as.factor(field.file.name[5])
if (i == 1) raw.data <- raw.data.file
else raw.data <- rbind(raw.data, raw.data.file)
}
colnames(raw.data) <- c("site", "treatment", "quad", "kartez", "obs", "cover", "height", "count", "comments", "collection.date", "collector")
# Read in all-quad data file
all.quads <- read.csv(all.quads, strip.white = T)
# reshape data.frame to long format
colnames(all.quads)
all.quads <- gather(all.quads, key = kartez, value = NPP, 21:242)
all.quads <- all.quads[all.quads$NPP > 0,]
# reduce to columns of interest
all.quads <- all.quads[,c("year", "site", "treatment", "season", "web", "plot", "subplot", "quad_ID", "quad", "biome", "annual", "GDD", "SPEI12", "kartez", "old.NPP")]
all.quads <- all.quads[,c("year", "site", "treat", "season", "web", "plot", "subplot", "quad_ID", "quad", "biome", "annual", "GDD", "SPEI12", "kartez", "old.NPP")]
head(all.quads)
all.quads <- all.quads[,c("year", "site", "treat", "season", "web", "plot", "subplot", "quad_ID", "quad", "biome", "annual", "GDD", "SPEI12", "kartez", "NPP")]
all.quads <- read.csv(all.quads, strip.white = T)
all.quad.file <- "/Users/alesia/Documents/Project_SevPublicPlantRCode/NPP_quad_met2016.csv"
all.quads <- read.csv(all.quad.file, strip.white = T)
colnames(all.quads)
all.quads <- gather(all.quads, key = kartez, value = NPP, 21:242)
all.quads <- all.quads[all.quads$NPP > 0,]
# reduce to columns of interest
all.quads <- all.quads[,c("year", "site", "treat", "season", "web", "plot", "subplot", "quad_ID", "quad", "biome", "annual", "GDD", "SPEI12", "kartez", "NPP")]
colnames(all.quads)
colnames(all.quads)[3] <- "treatment"
master.species.list <- read.csv(master.species.list.file, strip.white = T)
master.species.list.file <- "~/Documents/Project_SevPublicPlantRCode/"
master.species.list <- read.csv(master.species.list.file, strip.white = T)
for (i in 1:nrow(raw.data)) {
if (is.na(raw.data$site[i])) raw.data$site[i] <- raw.data$site[i-1]
if (is.na(raw.data$treatment[i])) raw.data$treatment[i] <- raw.data$treatment[i-1]
if (is.na(raw.data$quad[i])) raw.data$quad[i] <- raw.data$quad[i-1]
if (is.na(raw.data$kartez[i])) raw.data$kartez[i] <- raw.data$kartez[i-1]
}
raw.data$site <- toupper(raw.data$site)
raw.data$kartez <- toupper(raw.data$kartez)
raw.data$treat <- toupper(raw.data$treat)
summary(raw.data)
raw.data$treatment <- toupper(raw.data$treatment)
summary(raw.data)
raw.data$site <- as.factor(toupper(raw.data$site))
raw.data$kartez <- as.factor(toupper(raw.data$kartez))
raw.data$treatment <- as.factor(toupper(raw.data$treatment))
summary(raw.data)
for (i in 1:nrow(raw.data)) {
if (is.na(raw.data$site[i])) raw.data$site[i] <- raw.data$site[i-1]
if (is.na(raw.data$treatment[i])) raw.data$treatment[i] <- raw.data$treatment[i-1]
if (is.na(raw.data$quad[i])) raw.data$quad[i] <- raw.data$quad[i-1]
if (is.na(raw.data$kartez[i])) raw.data$kartez[i] <- raw.data$kartez[i-1]
}
summary(raw.data)
# Fill in blank site, plot, and quad cells
for (i in 1:nrow(raw.data)) {
if (raw.data$site[i] == "" | is.na(raw.data$site[i]))
{raw.data$site[i] <- raw.data$site[i-1]}
if (raw.data$treatment[i] == "" | is.na(raw.data$treatment[i]))
{raw.data$treatment[i] <- raw.data$treatment[i-1]}
if (raw.data$quad[i] == "" | is.na(raw.data$quad[i]))
{raw.data$quad[i] <- raw.data$quad[i-1]}
if (raw.data$kartez[i] == "" | is.na(raw.data$kartez[i]))
{raw.data$kartez[i] <- raw.data$kartez[i-1]}
}
summary(raw.data)
raw.data.file <- read.xls(raw.data.sheets[i], na.strings=c(""))
i
i=1
raw.data.file <- read.xls(raw.data.sheets[i], na.strings=c(""))
summary(raw.data.file)
i=2
raw.data.file <- read.xls(raw.data.sheets[i], na.strings=c(""))
summary(raw.data.file)
### Directory information
# Where are the raw (or copies of the raw) data files stored?
location_raw.data.sheets <- "~/Desktop/test_field_crew_data/"
# Where is the large, all-quad data file stored?
all.quad.file <- "/Users/alesia/Documents/Project_SevPublicPlantRCode/NPP_quad_met2016.csv"
# Where is the master species list stored?
master.species.list.file <- "~/Documents/Project_SevPublicPlantRCode/"
# Load R packages that will be used
# This list is long because Alesia is lazy
library(ggplot2)
library(lubridate)
library(plyr)
library(reshape2)
library(gridExtra)
library(cowplot)
library(knitr)
library(markdown)
library(xtable)
library(zoo)
library(tidyr)
library(stats)
library(car)
library(nlme)
library(visreg)
library(ggmap)
library(sp)
library(gdata)
## Read in raw data files
# For now, this script just runs on a few test files
raw.data.sheets <- paste0(location_raw.data.sheets,
list.files(location_raw.data.sheets, pattern = "npp"))
for (i in 1:length(raw.data.sheets)) {
raw.data.file <- read.xls(raw.data.sheets[i], na.strings=c(""))
# extract file name info
field.file.name <- strsplit(list.files(location_raw.data.sheets, pattern = "npp")[i], split = "[.]")[[1]]
raw.data.file$collection.date <- as.Date(paste(field.file.name[2], field.file.name[3], field.file.name[4]), format = "%m %d %y")
raw.data.file$collector <- as.factor(field.file.name[5])
if (i == 1) raw.data <- raw.data.file
else raw.data <- rbind(raw.data, raw.data.file)
}
colnames(raw.data) <- c("site", "treatment", "quad", "kartez", "obs", "cover", "height", "count", "comments", "collection.date", "collector")
# Read in all-quad data file
all.quads <- read.csv(all.quad.file, strip.white = T)
# reshape data.frame to long format
#colnames(all.quads)
all.quads <- gather(all.quads, key = kartez, value = NPP, 21:242)
all.quads <- all.quads[all.quads$NPP > 0,]
# reduce to columns of interest
all.quads <- all.quads[,c("year", "site", "treat", "season", "web", "plot", "subplot", "quad_ID", "quad", "biome", "annual", "GDD", "SPEI12", "kartez", "NPP")]
colnames(all.quads)[3] <- "treatment"
# Possibly, read in a species list file
master.species.list <- read.csv(master.species.list.file, strip.white = T)
# Fill in blank site, plot, and quad cells
for (i in 1:nrow(raw.data)) {
if (raw.data$site[i] == "" | is.na(raw.data$site[i]))
{raw.data$site[i] <- raw.data$site[i-1]}
if (raw.data$treatment[i] == "" | is.na(raw.data$treatment[i]))
{raw.data$treatment[i] <- raw.data$treatment[i-1]}
if (raw.data$quad[i] == "" | is.na(raw.data$quad[i]))
{raw.data$quad[i] <- raw.data$quad[i-1]}
if (raw.data$kartez[i] == "" | is.na(raw.data$kartez[i]))
{raw.data$kartez[i] <- raw.data$kartez[i-1]}
}
# Capitalize site and species names
raw.data$site <- as.factor(toupper(raw.data$site))
raw.data$kartez <- as.factor(toupper(raw.data$kartez))
raw.data$treatment <- as.factor(toupper(raw.data$treatment))
summary(raw.data)
### Directory information
# Where are the raw (or copies of the raw) data files stored?
location_raw.data.sheets <- "~/Desktop/test_field_crew_data/"
# Where is the large, all-quad data file stored?
all.quad.file <- "/Users/alesia/Documents/Project_SevPublicPlantRCode/NPP_quad_met2016.csv"
# Where is the master species list stored?
master.species.list.file <- "~/Documents/Project_SevPublicPlantRCode/"
# Load R packages that will be used
# This list is long because Alesia is lazy
library(ggplot2)
library(lubridate)
library(plyr)
library(reshape2)
library(gridExtra)
library(cowplot)
library(knitr)
library(markdown)
library(xtable)
library(zoo)
library(tidyr)
library(stats)
library(car)
library(nlme)
library(visreg)
library(ggmap)
library(sp)
library(gdata)
## Read in raw data files
# For now, this script just runs on a few test files
raw.data.sheets <- paste0(location_raw.data.sheets,
list.files(location_raw.data.sheets, pattern = "npp"))
for (i in 1:length(raw.data.sheets)) {
raw.data.file <- read.xls(raw.data.sheets[i], na.strings=c(""))
# extract file name info
field.file.name <- strsplit(list.files(location_raw.data.sheets, pattern = "npp")[i], split = "[.]")[[1]]
raw.data.file$collection.date <- as.Date(paste(field.file.name[2], field.file.name[3], field.file.name[4]), format = "%m %d %y")
raw.data.file$collector <- as.factor(field.file.name[5])
if (i == 1) raw.data <- raw.data.file
else raw.data <- rbind(raw.data, raw.data.file)
}
colnames(raw.data) <- c("site", "treatment", "quad", "kartez", "obs", "cover", "height", "count", "comments", "collection.date", "collector")
# Read in all-quad data file
all.quads <- read.csv(all.quad.file, strip.white = T)
# reshape data.frame to long format
#colnames(all.quads)
all.quads <- gather(all.quads, key = kartez, value = NPP, 21:242)
all.quads <- all.quads[all.quads$NPP > 0,]
# reduce to columns of interest
all.quads <- all.quads[,c("year", "site", "treat", "season", "web", "plot", "subplot", "quad_ID", "quad", "biome", "annual", "GDD", "SPEI12", "kartez", "NPP")]
colnames(all.quads)[3] <- "treatment"
# Possibly, read in a species list file
master.species.list <- read.csv(master.species.list.file, strip.white = T)
# Fill in blank site, plot, and quad cells
for (i in 1:nrow(raw.data)) {
if (is.na(raw.data$site[i])) raw.data$site[i] <- raw.data$site[i-1]
if (is.na(raw.data$treatment[i])) raw.data$treatment[i] <- raw.data$treatment[i-1]
if (is.na(raw.data$quad[i])) raw.data$quad[i] <- raw.data$quad[i-1]
if (is.na(raw.data$kartez[i])) raw.data$kartez[i] <- raw.data$kartez[i-1]
}
# Capitalize site and species names
raw.data$site <- as.factor(toupper(raw.data$site))
raw.data$kartez <- as.factor(toupper(raw.data$kartez))
raw.data$treatment <- as.factor(toupper(raw.data$treatment))
summary(raw.data)
list.files(location_raw.data.sheets, pattern = "npp")
paste0(location_raw.data.sheets, "filled_raw_data", mean(raw.data$collection.date)
)
paste0(location_raw.data.sheets, "filled_raw_data", months(mean(raw.data$collection.date)), year(mean(raw.data$collection.date)))
paste0(location_raw.data.sheets, "filled_raw_data", months(mean(raw.data$collection.date), abb=T), year(mean(raw.data$collection.date)))
write.csv(raw.data, paste0(location_raw.data.sheets, "filled_raw_data", months(mean(raw.data$collection.date), abb=T), year(mean(raw.data$collection.date))))
write.csv(raw.data, paste0(location_raw.data.sheets, "filled_raw_data", months(mean(raw.data$collection.date), abb=T), year(mean(raw.data$collection.date))), quote=F)
write.csv(raw.data, paste0(location_raw.data.sheets, "filled_raw_data", months(mean(raw.data$collection.date), abb=T), year(mean(raw.data$collection.date))), quote = F, row.names = F)
filled.data <- raw.data
write.csv(filled.data, paste0(location_raw.data.sheets, "filled_raw_data", months(mean(raw.data$collection.date), abb=T), year(mean(raw.data$collection.date))), quote = F, row.names = F)
master.species.list.file <- "~/Documents/Project_SevPublicPlantRCode/SevilletaSpeciesList_AJH.csv"
master.species.list <- read.csv(master.species.list.file, strip.white = T)
head(master.species.list)
head(filled.data$site)
head(filled.data)
unique(filled.data[!filled.data$site %in% c("GB"), c("site", "collection.date", "collector")])
unique(filled.data[filled.data$site %in% c("GB"), c("site", "collection.date", "collector")])
unique(all.quads$site)
unique(!filled.data[filled.data$site %in% c(all.quads$site), c("site", "collection.date", "collector")])
unique(filled.data[!filled.data$site %in% c(all.quads$site), c("site", "collection.date", "collector")])
head(paste(all.quads$site, all.quads$treatment))
unique(!filled.data[paste(filled.data$site, filled.data$treatment) %in% paste(all.quads$site, all.quads$treatment), c("site", "treatment", "collection.date", "collector")])
unique(filled.data[!paste(filled.data$site, filled.data$treatment) %in% paste(all.quads$site, all.quads$treatment), c("site", "treatment", "collection.date", "collector")])
unique(filled.data[filled.data$kartez %in% all.quads$kartez, c("site", "kartez", "collection.date", "collector")])
unique(filled.data[!filled.data$kartez %in% all.quads$kartez, c("site", "kartez", "collection.date", "collector")])
unique(filled.data[!filled.data$kartez %in% master.species.list$kartez, c("site", "kartez", "collection.date", "collector")])
head(filled.data)
unique(filled.data[!paste(filled.data$site, filled.data$quad) %in% paste(all.quads$site, all.quads$quad), c("site", "quad", "collection.date", "collector")])
cat("  \n\n Site names in the filled.data file that don't exist in the all.quads data file: \n")
kable(unique(filled.data[!filled.data$site %in% c(all.quads$site), c("site", "collection.date", "collector")]), format = "pandoc")
unique(filled.data$cover[filled.data$cover <=1])
write.out.file <- paste0(location_raw.data.sheets, "filled_raw_data", months(mean(raw.data$collection.date), abb=T), year(mean(raw.data$collection.date)))
filled.data <- read.csv(write.out.file)
str(filled.data)
unique(filled.data$collection.date)
filled.data$collection.date <- as.Date(filled.data$collection.date)
str(filled.data)
filled.data$collection.date[(filled.data$collection.date - mean(filled.data$collection.date)) > days(60)]
unique(filled.data$collection.date[(filled.data$collection.date - mean(filled.data$collection.date)) > days(60)])
unique(filled.data[filled.data$cover > 30 |
(filled.data$cover < 1 & !filled.data$cover %in% c(0.1, 0.25, 0.5, 0.75)),
c("site", "kartez", "cover", "collection.date", "collector")]), format = "pandoc")
unique(filled.data[filled.data$cover > 30 |
(filled.data$cover < 1 & !filled.data$cover %in% c(0.1, 0.25, 0.5, 0.75)),
c("site", "kartez", "cover", "collection.date", "collector")])
raw.data[is.na(raw.data$kartez),]
raw.data[is.na(raw.data$cover),]
raw.data[is.na(raw.data$height),]
head(filled.data)
kable(unique(filled.data$collection.date[is.na(filled.data$collection.date) |(filled.data$collection.date - mean(filled.data$collection.date)) > days(60)]), format = "pandoc")
kable(unique(filled.data[is.na(filled.data$site) |
is.na(filled.data$treatment) |
is.na(filled.data$quad) |
is.na(filled.data$kartez) |
is.na(filled.data$cover) |
is.na(filled.data$height),]), format = "pandoc")
unique(filled.data[is.na(filled.data$site) |
is.na(filled.data$treatment) |
is.na(filled.data$quad) |
is.na(filled.data$kartez) |
is.na(filled.data$cover) |
is.na(filled.data$height),])
unique(filled.data[filled.data$cover > 30 |
(filled.data$cover < 1 & !filled.data$cover %in% c(0.1, 0.25, 0.5, 0.75)),
c("site", "kartez", "cover", "collection.date", "collector")])
kable(unique(filled.data[
filled.data$cover > 30 |
(filled.data$cover < 1 & !filled.data$cover %in% c(0.1, 0.25, 0.5, 0.75)) |
(filled.data$cover > 1 & filled.data$cover < 10 & !filled.data$cover %in% c(0.1, 0.25, 0.5, 0.75)),
c("site", "kartez", "cover", "height", "collection.date", "collector")]), format = "pandoc")
filled.data$cover/0.5
unique(filled.data[filled.data$cover > 1 & filled.data$cover < 10 & !is.integer(filled.data$cover/0.5), c("site", "kartez", "cover")])
filled.data <- read.csv(write.out.file, strip.white = T)
filled.data$collection.date <- as.Date(filled.data$collection.date)
unique(filled.data[filled.data$cover > 1 & filled.data$cover < 10 & !is.integer(filled.data$cover/0.5), c("site", "kartez", "cover")])
kable(unique(filled.data[
filled.data$cover > 30 |
(filled.data$cover < 1 & !filled.data$cover %in% c(0.1, 0.25, 0.5, 0.75)),
c("site", "kartez", "cover", "height", "collection.date", "collector")]),
format = "pandoc")
kable(unique(filled.data[is.na(filled.data$collection.date) |(filled.data$collection.date - mean(filled.data$collection.date)) > days(60), c("site", "collection.date", "collector", )]), format = "pandoc")
kable(unique(filled.data[is.na(filled.data$collection.date) |(filled.data$collection.date - mean(filled.data$collection.date)) > days(60), c("site", "collection.date", "collector")]), format = "pandoc")
tail(filled.data)
filled.data[is.na(filled.data$site),]
filled.data[is.na(filled.data$kartez),]
filled.data[is.na(filled.data$height),]
weird.dates <- kable(unique(filled.data[is.na(filled.data$collection.date) |(filled.data$collection.date - mean(filled.data$collection.date)) > days(60), c("site", "collection.date", "collector")]), format = "pandoc")
nrow(weird.dates > 0)
weird.dates <- unique(filled.data[is.na(filled.data$collection.date) |(filled.data$collection.date - mean(filled.data$collection.date)) > days(60), c("site", "collection.date", "collector")])
nrow(weird.dates > 0)
nrow(weird.dates) > 0
if (nrow(weird.dates) > 0) kable(weird.dates, format = "pandoc")
x$cover * x$count
head(ddply(filled.data, c("site", "treatment", "quad", "kartez"), function(x) data.frame(
sum.cover = sum(x$cover * x$count, na.rm=T),
mean.cover = mean(x$cover, na.rm=T),
mean.height = mean(x$height, na.rm=T))))
quad.totals <- ddply(filled.data, c("site", "treatment", "quad", "kartez"), function(x) data.frame(
sum.cover = sum(x$cover * x$count, na.rm=T),
mean.cover = mean(x$cover, na.rm=T),
mean.height = mean(x$height, na.rm=T)))
quad.totals
ddply(filled.data, c("site", "treatment", "quad", "kartez"), function(x) data.frame(
sum.cover = sum(x$cover * x$count, na.rm=T),
mean.cover = mean(x$cover, na.rm=T),
mean.height = mean(x$height, na.rm=T)))
ddply(filled.data, c("site", "treatment", "quad", "kartez"), function(x) data.frame(
sum.cover = sum(x$cover * x$count, na.rm=T),
mean.cover = mean(x$cover, na.rm=T),
mean.height = mean(x$height, na.rm=T),
collector = unique(x$collector)))
ddply(filled.data, c("site", "treatment", "quad", "kartez"), function(x) data.frame(
sum.cover = sum(x$cover * x$count, na.rm=T),
mean.cover = mean(x$cover, na.rm=T),
mean.height = mean(x$height, na.rm=T),
collector = unique(x$collector)))
errors <- unique(quad.totals[quad.totals$sum.cover > 100, c(site, treatment)])
{if (nrow(errors) > 0) kable(errors, format = "pandoc")
else cat("\n no errors found \n")}
errors <- unique(quad.totals[quad.totals$sum.cover > 100, c("site", "treatment")])
{if (nrow(errors) > 0) kable(errors, format = "pandoc")
else cat("\n no errors found \n")}
### Directory information
# Where are the raw (or copies of the raw) data files stored?
location_raw.data.sheets <- "~/Desktop/test_field_crew_data/"
# Where is the large, all-quad data file stored?
all.quad.file <- "/Users/alesia/Documents/Project_SevPublicPlantRCode/NPP_quad_met2016.csv"
# Where is the master species list stored?
master.species.list.file <- "~/Documents/Project_SevPublicPlantRCode/SevilletaSpeciesList_AJH.csv"
# Load R packages that will be used
# This list is long because Alesia is lazy
library(ggplot2)
library(lubridate)
library(plyr)
library(reshape2)
library(gridExtra)
library(cowplot)
library(knitr)
library(markdown)
library(xtable)
library(zoo)
library(tidyr)
library(stats)
library(car)
library(nlme)
library(visreg)
library(ggmap)
library(sp)
library(gdata)
## Read in raw data files
# For now, this script just runs on a few test files
raw.data.sheets <- paste0(location_raw.data.sheets,
list.files(location_raw.data.sheets, pattern = "npp"))
for (i in 1:length(raw.data.sheets)) {
raw.data.file <- read.xls(raw.data.sheets[i], na.strings=c(""))
# extract file name info
field.file.name <- strsplit(list.files(location_raw.data.sheets, pattern = "npp")[i], split = "[.]")[[1]]
raw.data.file$collection.date <- as.Date(paste(field.file.name[2], field.file.name[3], field.file.name[4]), format = "%m %d %y")
raw.data.file$collector <- as.factor(field.file.name[5])
if (i == 1) raw.data <- raw.data.file
else raw.data <- rbind(raw.data, raw.data.file)
}
colnames(raw.data) <- c("site", "treatment", "quad", "kartez", "obs", "cover", "height", "count", "comments", "collection.date", "collector")
# Capitalize site and species names
raw.data$site <- as.factor(toupper(raw.data$site))
raw.data$kartez <- as.factor(toupper(raw.data$kartez))
raw.data$treatment <- as.factor(toupper(raw.data$treatment))
head(raw.data)
raw.data.sheets <- paste0(location_raw.data.sheets,
list.files(location_raw.data.sheets, pattern = "npp"))
for (i in 1:length(raw.data.sheets)) {
raw.data.file <- read.xls(raw.data.sheets[i], na.strings=c(""))
# extract file name info
field.file.name <- strsplit(list.files(location_raw.data.sheets, pattern = "npp")[i], split = "[.]")[[1]]
raw.data.file$collection.date <- as.Date(paste(field.file.name[2], field.file.name[3], field.file.name[4]), format = "%m %d %y")
raw.data.file$collector <- as.factor(field.file.name[5])
if (i == 1) raw.data <- raw.data.file
else raw.data <- rbind(raw.data, raw.data.file)
}
colnames(raw.data) <- c("site", "treatment", "quad", "kartez", "obs", "cover", "height", "count", "comments", "collection.date", "collector")
summary(raw.data)
# Capitalize site and species names
raw.data$site <- as.factor(toupper(raw.data$site))
raw.data$kartez <- as.factor(toupper(raw.data$kartez))
raw.data$treatment <- as.factor(toupper(raw.data$treatment))
summary(raw.data)
all.quads <- read.csv(all.quad.file, strip.white = T)
# reshape data.frame to long format
#colnames(all.quads)
all.quads <- gather(all.quads, key = kartez, value = NPP, 21:242)
all.quads <- all.quads[all.quads$NPP > 0,]
# reduce to columns of interest
all.quads <- all.quads[,c("year", "site", "treat", "season", "web", "plot", "subplot", "quad_ID", "quad", "biome", "annual", "GDD", "SPEI12", "kartez", "NPP")]
colnames(all.quads)[3] <- "treatment"
master.species.list <- read.csv(master.species.list.file, strip.white = T)
for (i in 1:nrow(raw.data)) {
if (is.na(raw.data$site[i])) raw.data$site[i] <- raw.data$site[i-1]
if (is.na(raw.data$treatment[i])) raw.data$treatment[i] <- raw.data$treatment[i-1]
if (is.na(raw.data$quad[i])) raw.data$quad[i] <- raw.data$quad[i-1]
if (is.na(raw.data$kartez[i])) raw.data$kartez[i] <- raw.data$kartez[i-1]
}
summary(raw.data)
write.out.file <- paste0(location_raw.data.sheets, "filled_raw_data", months(mean(raw.data$collection.date), abb=T), year(mean(raw.data$collection.date)))
write.out.file
filled.data <- read.csv(write.out.file, strip.white = T)
filled.data$collection.date <- as.Date(filled.data$collection.date)
quad.totals <- ddply(filled.data, c("site", "treatment", "quad", "kartez"), function(x) data.frame(
sum.cover = sum(x$cover * x$count, na.rm=T),
mean.cover = mean(x$cover, na.rm=T),
mean.height = mean(x$height, na.rm=T),
collector = unique(x$collector)))
quad.totals
unique(filled.data[is.na(filled.data$site) |
is.na(filled.data$treatment) |
is.na(filled.data$quad) |
is.na(filled.data$kartez) |
is.na(filled.data$cover) |
is.na(filled.data$height) |
is.na(filled.data$count),
c("site", "quad", "kartez", "cover", "height", "count", "collection.date", "collector")])
unique(filled.data[is.na(filled.data$site) |
is.na(filled.data$treatment) |
is.na(filled.data$quad) |
is.na(filled.data$kartez) |
is.na(filled.data$cover) |
is.na(filled.data$height) |
is.na(filled.data$count),
c("site", "quad", "kartez", "cover", "height", "count", "collection.date", "collector")])
unique(filled.data[!paste(all.quads$site, all.quads$quad) %in% paste(filled.data$site, filled.data$quad), c("site", "quad", "collection.date", "collector")])
unique(all.quads[!paste(all.quads$site, all.quads$quad) %in% paste(filled.data$site, filled.data$quad), c("site", "quad")])
colnames(all.quads)
unique(all.quads[!paste(all.quads$site, all.quads$quad) %in% paste(filled.data$site, filled.data$quad), c("site", "web", "plot", "quad")])
unique(all.quads[!paste(all.quads$site, all.quads$quad) %in% paste(filled.data$site, filled.data$quad), c("site", "treatment", "web", "plot", "quad")])
### WorkLog plotter
library(ggplot2)
library(RColorBrewer)
library(gridExtra)
library(reshape2)
library(lubridate)
library(plyr)
# Daily plots, weekly plots, goals
# Read in WorkLog diary
WorkLog <- read.csv('/Users/alesia/Desktop/WorkLog.csv', header = TRUE, strip.white = TRUE, fill = 0)
WorkLog$Date <- as.Date(strptime(WorkLog$Date, "%m/%d/%y"))
WorkLog <- WorkLog[(WorkLog$Date - Sys.Date()) < 1,]
WorkLog$Week <- week(WorkLog$Date)
# Sum activities by week
weeklysums <- ddply(WorkLog, "Week", function(x) data.frame(
Holiday = sum(x$Holiday, na.rm=T),
Sev_RA = sum(x$Sev_RA, na.rm=T),
R_TA = sum(x$R_TA, na.rm=T),
Writing = sum(x$Writing, na.rm=T),
Research = sum(x$PersonalResearch, na.rm=T),
Collaboration = sum(x$Collaboration, na.rm=T),
Service = sum(x$Service, na.rm=T),
Other = sum(x$Other, na.rm=T)))
weeklysums <- melt(weeklysums, id="Week")
colnames(weeklysums)[2:3] <- c("Activity", "Hours")
weeklysums$Hours[weeklysums$Hours == 0] <- NA
weeklysums$Category <- revalue(weeklysums$Activity, c(
"Holiday" = "Paid",
"Sev_RA" = "Paid",
"R_TA" = "Personal",
"Writing" = "Personal",
"Research" = "Personal",
"Collaboration" = "Personal",
"Service" = "Personal",
"Other" = "Personal"))
weeklysums$Activity <- factor(weeklysums$Activity, levels = c("Sev_RA", "Writing", "Research", "Collaboration", "R_TA", "Service", "Other", "Holiday"))
weekly.plot <- ggplot(weeklysums, aes(Week, Hours, fill=Activity)) +
geom_bar(stat="identity") +
theme(panel.background = element_rect(fill = "grey22"),
panel.grid.major = element_line(colour = "grey41", linetype = "dotted"),
panel.grid.minor = element_blank()) +
facet_grid(Category ~ ., scales="free") +
scale_fill_manual(values=c('#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e','#e6ab02','#a6761d','#666666')) +
xlab("Week") + ylab("Total Hours")
weekly.plot
weekly.plot.dos <- ggplot(weeklysums, aes(Week, Hours, group = Activity, colour = Activity)) +
geom_point(size = 4, shape = 1) +
geom_line(size = 1) +
theme(panel.background = element_rect(fill = "grey22"),
panel.grid.major = element_line(colour = "grey41", linetype = "dotted"),
panel.grid.minor = element_blank()) +
scale_colour_manual(values=c('#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e','#e6ab02','#a6761d','#666666')) +
xlab("Week") + ylab("Hours")
weekly.plot.dos
#grid.arrange(weekly.plot, weekly.plot.dos, nrow=1)
summary(filled.data$count %% 1)
unique(filled.data$count %% 1)
unique(filled.data[
is.na(filled.data$count) |
filled.data$count < 1 |
(filled.data$count %% 1) != 0,
c("site", "kartez", "cover", "height", "count", "collection.date", "collector")])
unique(filled.data[
is.na(filled.data$count) |
#filled.data$count < 1 |
(filled.data$count %% 1) != 0,
c("site", "kartez", "cover", "height", "count", "collection.date", "collector")])
field.file.name[4]
nchar(field.file.name[4])
substr(field.file.name[4], start=nchar(field.file.name[4])-1, stop=nchar(field.file.name[4]))
nchar(field.file.name[4])-1
